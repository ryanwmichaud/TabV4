[{"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\index.js":"1","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\App.js":"2","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\reportWebVitals.js":"3","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\diagram.js":"4","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\Diagram.js":"5","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\ChordTone.js":"6","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\Stretch.js":"7","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\String.js":"8"},{"size":540,"mtime":1707864545851,"results":"9","hashOfConfig":"10"},{"size":6318,"mtime":1707952210687,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1688574565362,"results":"12","hashOfConfig":"10"},{"size":1165,"mtime":1693757464932,"results":"13","hashOfConfig":"10"},{"size":1235,"mtime":1703926796966,"results":"14","hashOfConfig":"10"},{"size":1869,"mtime":1707949351939,"results":"15","hashOfConfig":"10"},{"size":846,"mtime":1703666493622,"results":"16","hashOfConfig":"10"},{"size":2626,"mtime":1703923783704,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ub30rh",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\index.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\App.js",["43"],[],"import './App.css';\nimport React from \"react\";\nimport {Diagram} from './Diagram.js';\nimport { ChordToneInput } from './ChordTone';\nimport { StretchInput } from './Stretch';\nimport { StringInput,  } from './String';\n\n\nclass InputSection extends React.Component{\n  \n\n  \n  render(){\n    \n    return(\n      <div >\n        <div className='inputTitle'> Input: </div>\n        <StretchInput changeStretch={this.props.changeStretch} stretch={this.props.req.stretch}></StretchInput>\n        <ChordToneInput addChordTone={this.props.addChordTone} removeChordTone={this.props.removeChordTone} chordTones={this.props.req.chordTones}></ChordToneInput>\n        <StringInput strings={this.props.req.strings} n={this.props.n} changeNumStrings={this.props.changeNumStrings} changeOpen={this.props.changeOpen}></StringInput>\n      </div>\n      \n    )\n  }\n}\n\nclass ResultsSection extends React.Component{\n\n  constructor(props){\n    super(props);\n    //this.state = {\n    //  req: props.req,\n    //  res: props.res,\n    //  error: props.error \n    //};\n    \n  }\n\n  //static getDerivedStateFromProps(props){  //update state when parent state changes\n  //  return {\n  //    req: props.req,\n  //    res: props.res,\n  //    error: props.error \n  //  };\n  //}\n\n\n  \n  //componentDidMount() {\n  //this.handlePostRequest();\n  //}\n  \n\n  render(){\n\n    let data = this.props.res;\n    console.log(this.props.req.chordTones);\n    let error = this.props.error;\n\n    let noChordTones = true;\n    for(let i=0;i<12;i++){\n        if (this.props.req.chordTones[i]===true){\n          noChordTones = false;\n          break;\n\n        }\n    }\n    \n\n    if(error){\n      return <div>Error: {error}</div>\n    }\n    else if (!data | noChordTones) {\n      // Render a loading state while waiting for the data\n      return <div>Enter some chord tones to see how you can voice them on your instrument</div>;\n    } \n    else{\n        let diagrams = [];\n        \n\n        for(let i=0;i<data.length;i++){\n          diagrams = diagrams.concat(<Diagram stretch={this.props.req.stretch} diagram_data={data[i]} key={i}/>);\n        }\n        \n        \n        return(\n          <div>\n            <div className='resultsTitle'> Results: </div>\n            <div>\n            {diagrams}\n            </div>\n          </div>\n        );\n      }\n      \n    }\n\n\n    \n\n}\n\n\n\n\n\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.changeStretch = this.changeStretch.bind(this);\n    this.addChordTone = this.addChordTone.bind(this);\n    this.removeChordTone = this.removeChordTone.bind(this);\n    this.changeNumStrings = this.changeNumStrings.bind(this);\n    this.changeOpen = this.changeOpen.bind(this);\n\n    this.state = {\n      req: {\n        stretch:4, \n        strings: [\"E4\",\"A4\",\"D4\",\"G4\",\"B4\",\"E4\"], \n        chordTones: [false,false,false,false,false,false,false,false,false,false,false,false], \n        },\n      numStringSelects:6,\n      res: null,\n      error: null \n    };\n  }\n\n\n  handlePostRequest = () => { //gonna need to call this from app not input section. then we can call it from state change mathods at the top. \n    \n    fetch('http://localhost:8000/calculate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        // Add any other headers if needed\n      },\n      body: JSON.stringify(this.state.req),\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        // Update state with the response data\n        //console.log(data.message)\n        this.setState({ res: data.message, error: null });\n        \n      })\n      .catch(error => {\n        // Handle and store the error\n        this.setState({ res: null, error: error.message });\n      });\n  };\n\n\n  changeStretch(value){\n    this.setState( {req: {\n      stretch:value, \n      strings: this.state.req.strings, \n      chordTones: this.state.req.chordTones, \n      }}, ()=>{ this.handlePostRequest()});\n  }\n\n  changeNumStrings(n){\n    this.setState({numStringSelects: n});\n    const newStrings = [];\n    for(let i=0;i<n;i++){\n      newStrings.push(\"A1\")\n    }\n    this.setState( {req: {\n      stretch:this.state.req.stretch, \n      strings: newStrings, \n      chordTones: this.state.req.chordTones, \n      }}, ()=>{ this.handlePostRequest();});\n  }\n\n  changeOpen(index, newOpen){ \n    const newStrings = this.state.req.strings.slice();\n    newStrings[index] = newOpen+\"1\";\n    this.setState( {req: {\n      stretch:this.state.req.stretch, \n      strings: newStrings, \n      chordTones: this.state.req.chordTones, \n      }}, ()=>{ this.handlePostRequest();});\n   \n  }\n\n  \n  addChordTone(index){\n    let newChordTones = this.state.req.chordTones.slice();\n    newChordTones[index] = true;\n    this.setState( {req: {\n      stretch:this.state.req.stretch, \n      strings: this.state.req.strings, \n      chordTones: newChordTones, \n      }}, () => {\n        this.handlePostRequest();\n      });\n    \n  }\n\n  \n  removeChordTone(index){\n    let newChordTones = this.state.req.chordTones.slice();\n    newChordTones[index]=false;\n    this.setState( {req: {\n      stretch:this.state.req.stretch, \n      strings: this.state.req.strings, \n      chordTones: newChordTones, \n      }}, ()=>{\n        this.handlePostRequest();\n      });\n    \n  }\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">  \n          <p>\n            Fretbchord Explchorder\n          </p>\n      \n        </header>\n\n\n        <div className=\"main\">\n          <div className='input'>\n            <InputSection \n              req= {this.state.req}\n              changeStretch={this.changeStretch} \n              addChordTone={this.addChordTone}\n              removeChordTone={this.removeChordTone}\n              changeOpen={this.changeOpen}\n              changeNumStrings={this.changeNumStrings}\n              n={this.state.numStringSelects}\n            >\n            </InputSection>\n          </div>\n          <div className=\"results\"> \n            <ResultsSection\n              req={this.state.req} \n              res={this.state.res} \n              error={this.state.error}\n            >\n            </ResultsSection>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\reportWebVitals.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\diagram.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\Diagram.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\ChordTone.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\Stretch.js",[],[],"C:\\Users\\17082\\Documents\\Ryan Michaud\\GitHub\\TabV4\\src\\String.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":29,"column":3,"nodeType":"46","messageId":"47","endLine":37,"endColumn":4},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]